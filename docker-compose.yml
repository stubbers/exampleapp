version: '3.8'

services:
  app:
    build: .
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=file:./data/app.db
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=admin123
      - SEED=true
      - SEED_USERS=100
      - SEED_FILES=500
      - LOG_EVENTS_PER_SECOND=5
      - LOG_RETENTION_DAYS=30
    volumes:
      - app_data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: PostgreSQL database
  # Uncomment to use PostgreSQL instead of SQLite
  # postgres:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: exampleapp
  #     POSTGRES_USER: exampleapp
  #     POSTGRES_PASSWORD: exampleapp_password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped

  # app_with_postgres:
  #   build: .
  #   ports:
  #     - "3001:3001"
  #   environment:
  #     - NODE_ENV=production
  #     - DATABASE_URL=postgresql://exampleapp:exampleapp_password@postgres:5432/exampleapp
  #     - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
  #     - ADMIN_USERNAME=admin
  #     - ADMIN_PASSWORD=admin123
  #     - SEED=true
  #     - SEED_USERS=100
  #     - SEED_FILES=500
  #     - LOG_EVENTS_PER_SECOND=5
  #     - LOG_RETENTION_DAYS=30
  #   depends_on:
  #     - postgres
  #   restart: unless-stopped

volumes:
  app_data:
  # postgres_data: