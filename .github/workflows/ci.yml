name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript type checking
        run: npm run type-check

      - name: Run ESLint
        run: npm run lint

      - name: Validate Prisma schema
        run: npx prisma validate

      - name: Generate Prisma client
        run: npx prisma generate
        env:
          DATABASE_URL: "file:./test.db"

      - name: Build application
        run: npm run build
        env:
          DATABASE_URL: "file:./test.db"
          JWT_SECRET: "test-jwt-secret-for-ci"

      - name: Test Docker build
        run: |
          docker build -t exampleapp:test .
          docker run --rm -d --name exampleapp-test -p 3001:3001 \
            -e NODE_ENV=test \
            -e DATABASE_URL="file:./test.db" \
            -e JWT_SECRET="test-jwt-secret-for-ci" \
            exampleapp:test
          sleep 10
          curl -f http://localhost:3001/health || exit 1
          docker stop exampleapp-test

  security:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level moderate

      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD